apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: {{ project }}
  labels:
    app: {{ project }}
spec:
  selector:
    matchLabels:
      app: {{ project }}
  strategy:                 # 滚动部署
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 3
  replicas: 2
  template:
    metadata:
      labels:
        app: {{ project }}
    spec:
      containers:
      - image: registry-vpc.cn-beijing.aliyuncs.com/micro-java/{{ project }}:latest
        imagePullPolicy: Always
        name: {{ project }}
        ports:
        - containerPort: 8080
{% if rpc is defined and rpc %}
        - containerPort: 6666
{% endif %}
        env:
          - name: JVM_PARAMS
            value: {{ jvm_params }}     # Spring Boot JVM 参数配置
          - name: SPRING_PARAMS
            value: {{ spring_params }}  # Spring Boot 应用配置
#        livenessProbe:
#          httpGet:                      # 使用 HTTP 请求探测
#            port: 8080
#          failureThreshold: 3           # 最大失败次数
#          timeoutSeconds: 1             # 探测超时时长，单位：秒
#          initialDelaySeconds: 30       # 初始化时间，单位：秒
#          periodSeconds: 5              # 探测时间间隔，单位：秒
#          successThreshold: 1           # 失败后探测成功的最小连续成功次数
        resources:
          limits:
            cpu: "500m"
            memory: "1024Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ project }}
  labels:
    app: {{ project }}
spec:
  ports:
  - port: 8080
    targetPort: 8080
{% if nodePort is defined %}
    nodePort: {{ nodePort }}
{% endif %}
{% if rpc is defined and rpc %}
  - port: 6666
    targetPort: 6666
{% endif %}
  selector:
    app: {{ project }}
{% if nodePort is defined %}
  type: NodePort
{% endif %}